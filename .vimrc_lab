set nocompatible
execute pathogen#infect()

filetype off

call neobundle#begin(expand('~/.vim/bundle/'))
"insert here your Neobundle plugins"
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'scrooloose/syntastic.git'
" 補完
NeoBundle 'Shougo/neocomplcache.vim'
" NeoBundle 'Shougo/neosnippet.vim'
" インデントに色を付けて見やすくする
" NeoBundle 'nathanaelkane/vim-indent-guides'
" git "
NeoBundle 'tpope/vim-fugitive'
"ステータスバーがかっこよくなるやつ"
NeoBundle 'itchyny/lightline.vim'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'fuenor/qfixhowm/'
NeoBundle 'junegunn/vim-plug'
NeoBundle 'tikhomirov/vim-glsl'

" NeoBundle 'kien/ctrlp.vim'
call neobundle#end()

augroup MyXML
  autocmd!
  autocmd Filetype xml inoremap <buffer> </ </<C-x><C-o>
  autocmd Filetype html inoremap <buffer> </ </<C-x><C-o>
augroup END

" GLSL
autocmd! BufNewFile,BufRead *.scene,*.meshdata,*gltf set ft=xml
autocmd! BufNewFile,BufRead *.vp,*.fp set ft=glsl
autocmd BufRead,BufNewFile *.fp,*.vp,*.gp,*.tep,*.tcp, set filetype=c

nnoremap =g gg=G2<C-o>
set autoindent

filetype plugin indent on

" NEEDTreeの設定
autocmd vimenter * NERDTree
map <C-q> :NERDTreeToggle<CR>
map <C-w>> :closetab 
nnoremap <C-j> gt
nnoremap <C-k> gT


" vim-indent-guides "
" vimを立ち上げたときに、自動的にvim-indent-guidesをオンにする
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_start_level = 2
let g:indent_guides_auto_colors = 0


" NeoComplete "
" 起動時に有効
let g:neocomplete#enable_at_startup = 1
" " ポップアップメニューで表示される候補の数
" let g:neocomplete#max_list = 50
" " キーワードの長さ、デフォルトで80
" let g:neocomplete#max_keyword_width = 80
" let g:neocomplete#enable_ignore_case = 1
 highlight Pmenu ctermbg=6
 highlight PmenuSel ctermbg=3
 highlight PMenuSbar ctermbg=0

" クリップボード "
set clipboard+=unnamed
command Pbcopy :let @*=@"  "最後にyank or 削除した内容をクリップボードに入れる
command Pbcopy0 :let @*=@0 "最後にyankした内容をクリップボードに入れる
" setting
"文字コードをUFT-8に設定
set fenc=utf-8
" バックアップファイルを作らない
set nobackup
" スワップファイルを作らない
set noswapfile
" 編集中のファイルが変更されたら自動で読み直す
set autoread
" バッファが編集中でもその他のファイルを開けるように
set hidden
" 入力中のコマンドをステータスに表示する
set showcmd

" 見た目系
" 行番号を表示
set number
" 現在の行を強調表示
"set cursorline
" 行末の1文字先までカーソルを移動できるように
set virtualedit=onemore
" インデントはスマートインデント"
" set smartindent
" 括弧入力時の対応する括弧を表示
set showmatch
" ステータスラインを常に表示
set laststatus=2
" コマンドラインの補完
set wildmode=list:longest
" 折り返し時に表示行単位での移動できるようにする
nnoremap j gj
nnoremap k gk

" Tab系
" 不可視文字を可視化(タブが「▸-」と表示される)
set list listchars=tab:\▸\-
" Tab文字を半角スペースにする
set expandtab
" 行頭以外のTab文字の表示幅（スペースいくつ分）
set tabstop=2
" 行頭でのTab文字の表示幅
set shiftwidth=2

" color scheme

" ------------------------------------
" colorscheme
" ------------------------------------
syntax on
"COLORSCHEME"
 "colorscheme antares "いつもの お気に入り
colorscheme tender "よさ
" colorscheme perun
" colorscheme material-theme "白背景
"colorscheme pencil "白背景 
"colorscheme solarized "微妙
"colorscheme hybrid

set t_Co=256
" iTerm2で半透明にしているが、vimのcolorschemeを設定すると背景も変更されるため
" 検索系
" 検索文字列が小文字の場合は大文字小文字を区別なく検索する
set ignorecase
" 検索文字列に大文字が含まれている場合は区別して検索する
set smartcase
" 検索文字列入力時に順次対象文字列にヒットさせる
set incsearch
" 検索時に最後まで行ったら最初に戻る
set wrapscan
" 検索語をハイライト表示
set hlsearch

nnoremap gy = "OP
" 重いので構文解析を制限
set synmaxcol=200

" undo履歴を削除
command -nargs=0 Cu call <sid>ClearUndo()
function! s:ClearUndo()
  let old_undolevels = &undolevels
  set undolevels=-1
  exe "normal a \<BS>\<Esc>"
  let &undolevels = old_undolevels
  unlet old_undolevels
endfunction

set clipboard=unnamed,autoselect
